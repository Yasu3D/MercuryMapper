<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:lang="clr-namespace:MercuryMapper.Assets.Lang"
             xmlns:controls="clr-namespace:MercuryMapper.Controls"
             xmlns:fluent="using:FluentAvalonia.UI.Controls"
			 xmlns:rs="using:RangeSlider.Avalonia.Controls"
             mc:Ignorable="d" d:DesignWidth="1300" d:DesignHeight="830"
             PropertyChanged="MainView_OnPropertyChanged"
             x:Class="MercuryMapper.Views.MainView">
    
    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,*,Auto">
        
        <!-- Title Bar -->
        <Grid ColumnDefinitions="Auto,*" RowDefinitions="*" Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0" Name="TitleBar">
            <Menu Grid.Column="0" Background="{DynamicResource TitleBar}" Height="40">
                <MenuItem Width="40">
                    <MenuItem.Header>
                        <Image Source="/Assets/AppIcon.ico" Width="20"/>
                    </MenuItem.Header>
                    <TextBlock Name="VersionText" Text="[Version]"/>
                </MenuItem>
                
                <MenuItem Header="{x:Static lang:Resources.MenuHeader_File}" >
                    <MenuItem Header="{x:Static lang:Resources.Menu_New}" Click="MenuItemNew_OnClick" Name="MenuItemNew"/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Open}" Click="MenuItemOpen_OnClick" Name="MenuItemOpen" />
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Save}" Click="MenuItemSave_OnClick" Name="MenuItemSave" >
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSave}" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_SaveAs}" Click="MenuItemSaveAs_OnClick" Name="MenuItemSaveAs" >
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSaveAs}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Export}" >
                        <MenuItem Header="{x:Static lang:Resources.Menu_ExportMercury}" Click="MenuItemExportMercury_OnClick" />
                        <MenuItem Header="{x:Static lang:Resources.Menu_ExportSaturn}" Click="MenuItemExportSaturn_OnClick" />
                        <Separator/>
                        <MenuItem Header="{x:Static lang:Resources.Menu_ExportSaturnFolder}" Click="MenuItemExportSaturnFolder_OnClick" />
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Settings}" Click="MenuItemSettings_OnClick" Name="MenuItemSettings" > 
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSettings}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Exit}" Click="MenuItemExit_OnClick"/>
                </MenuItem>
                
                <MenuItem Header="{x:Static lang:Resources.MenuHeader_Edit}">
                    <MenuItem Header="{x:Static lang:Resources.Menu_Undo}" Name="MenuItemUndo"
                              Click="MenuItemUndo_OnClick"/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_Redo}" Name="MenuItemRedo"
                              Click="MenuItemRedo_OnClick"/>
                    <Separator/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_Cut}" Name="MenuItemCut" 
                              Click="MenuItemCut_OnClick"/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_Copy}" Name="MenuItemCopy" 
                              Click="MenuItemCopy_OnClick"/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_Paste}" Name="MenuItemPaste" 
                              Click="MenuItemPaste_OnClick"/>
                </MenuItem>
                
                <MenuItem Header="{x:Static lang:Resources.MenuHeader_Tools}">
                    <MenuItem Header="{x:Static lang:Resources.Menu_MirrorChart}" Name="MenuItemMirrorChart"
                              Click="MenuItemMirrorChart_OnClick"/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_ShiftChart}" Name="MenuItemShiftChart"
                              Click="MenuItemShiftChart_OnClick"/>
                    <Separator/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_FixOffByOneErrors}" Name="MenuItemFixOffByOne"
                              Click="MenuItemFixOffByOne_OnClick"/>
                    <Separator/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_JaggedHolds}" Name="MenuItemGenerateJaggedHolds"
                              Click="MenuItemGenerateJaggedHolds_OnClick"/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_ReconstructHolds}" Name="MenuItemReconstructHolds"
                              Click="MenuItemReconstructHolds_OnClick"/>
                </MenuItem>
            </Menu>
            <Panel Grid.Column="1" Background="{DynamicResource TitleBar}" IsHitTestVisible="False"/>
        </Grid>
        
        <!-- Left Panel -->
        <Grid RowDefinitions="*,Auto, Auto" Grid.Row="1" Grid.Column="0">  
            <ScrollViewer Grid.Row="0" Width="275" Name="LeftPanel">
                <Grid ColumnDefinitions="130,130">
                    <StackPanel Grid.Column="0" Width="130" Margin="5,5,5,0">
                        <Border   ClipToBounds="True" Classes="Outline">
                            <StackPanel>
                                <RadioButton Name="RadioNoteTouch" Classes="ToggleRadioStripe" 
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Touch}" IsChecked="True"/>
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSlideClockwise" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SlideClockwise}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSlideCounterclockwise" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SlideCounterclockwise}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSnapForward" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SnapForward}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSnapBackward" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SnapBackward}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteChain" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Chain}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteHold" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Hold}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteMaskAdd" Classes="ToggleRadioStripe"
                                             BorderBrush="White" 
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_MaskAdd}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteMaskRemove" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_MaskRemove}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteEndOfChart" Classes="ToggleRadioStripe"
                                             BorderBrush="White" 
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_EndOfChart}" />
                                    
                            </StackPanel>
                        </Border>

                        <Border   ClipToBounds="True" Classes="Outline" Margin="0,10,0,0" Name="BonusTypePanel">
                            <StackPanel>
                                <RadioButton Name="RadioNoBonus" IsChecked="True" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_None}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioBonus" IsChecked="False" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_Bonus}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioRNote" IsChecked="False" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_RNote}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                            </StackPanel>
                        </Border>
                            
                        <Border   ClipToBounds="True" Classes="Outline" Margin="0,10,0,0" Name="MaskDirectionPanel">
                            <StackPanel>
                                <RadioButton Name="RadioMaskClockwise" IsChecked="True"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Clockwise}"
                                             IsCheckedChanged="RadioMaskDirection_IsCheckedChanged" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioMaskCounterclockwise" IsChecked="False"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Counterclockwise}"
                                             IsCheckedChanged="RadioMaskDirection_IsCheckedChanged" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioMaskCenter" IsChecked="False"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Center}"
                                             IsCheckedChanged="RadioMaskDirection_IsCheckedChanged" />
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="1" Width="130" Margin="0,5,5,0">
                        <Border ClipToBounds="True" Classes="Outline">
                            <StackPanel>
                                <Button Name="ButtonGimmickBpmChange" Classes="CompactButton" Click="ButtonGimmickBpmChange_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_BpmChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickTimeSig" Classes="CompactButton" Click="ButtonGimmickTimeSig_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_TimeSigChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickHiSpeed" Classes="CompactButton" Click="ButtonGimmickHiSpeed_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_HiSpeedChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickStop" Classes="CompactButton" Click="ButtonGimmickStop_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_Stop}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickReverse" Classes="CompactButton" Click="ButtonGimmickReverse_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_Reverse}" />
                            </StackPanel>
                        </Border>
                        
                        <Border ClipToBounds="True" Classes="Outline" Margin="0,6,0,0">
                            <StackPanel>
                                <ToggleButton Name="ToggleNoteLayer" Classes="CompactButton" IsCheckedChanged="ToggleNoteLayer_IsCheckedChanged"
                                              Content="{x:Static lang:Resources.Editor_LayerNote}" IsChecked="True"/>
                                    
                                <Separator Margin="0"/>
                                    
                                <ToggleButton Name="ToggleMaskLayer" Classes="CompactButton" IsCheckedChanged="ToggleMaskLayer_IsCheckedChanged"
                                              Content="{x:Static lang:Resources.Editor_LayerMask}" IsChecked="True"/>
                                    
                                <Separator Margin="0"/>
                                    
                                <ToggleButton Name="ToggleGimmickLayer" Classes="CompactButton" IsCheckedChanged="ToggleGimmickLayer_IsCheckedChanged"
                                              Content="{x:Static lang:Resources.Editor_LayerGimmick}" IsChecked="True"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
                
            <Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*,*,*,*,*,*,*,*" ColumnDefinitions="Auto,*,Auto" Margin="5,5,5,0">
                <TextBlock Grid.Column="0" Grid.Row="0" 
                Margin="5,5,0,-7"
                Text="{x:Static lang:Resources.Editor_Position}"/>
                <TextBlock Grid.Column="0" Grid.Row="2" 
                Margin="5,5,0,-7"
                Text="{x:Static lang:Resources.Editor_Size}"/>
                
                <Slider Name="SliderNotePosition" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                        Classes="Compact" Margin="5" IsSnapToTickEnabled="True" TickPlacement="TopLeft" TickFrequency="1"
                        Maximum="59" Minimum="0" Value="0" ValueChanged="SliderPosition_OnValueChanged" PointerWheelChanged="SliderNotePosition_OnPointerWheelChanged"/> 
                <Slider Name="SliderNoteSize" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" 
                        Classes="Compact" Margin="5" IsSnapToTickEnabled="True" TickPlacement="TopLeft" TickFrequency="1"
                        Maximum="60" Minimum="4" Value="15" ValueChanged="SliderSize_OnValueChanged" PointerWheelChanged="SliderNoteSize_OnPointerWheelChanged"/> 
                
                <NumericUpDown Name="NumericNotePosition" Grid.Row="1" Grid.Column="2" Width="30" 
                Maximum="60" Minimum="-1" Increment="1" Value="0" ValueChanged="NumericPosition_OnValueChanged"/>
                <NumericUpDown Name="NumericNoteSize" Grid.Row="3" Grid.Column="2" Width="30" 
                Maximum="60" Minimum="4" Increment="1" Value="15" ValueChanged="NumericSize_OnValueChanged"/>

                <Separator Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3"/>
                
                <TextBlock Grid.Row="5" Grid.Column="0"
                           Margin="5,5,0,0" Text="{x:Static lang:Resources.Editor_Measure}"/>
                
                <Grid Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" ColumnDefinitions="*,Auto, Auto" Margin="0,5">
                    <NumericUpDown Grid.Column="0" Name="NumericMeasure" ValueChanged="NumericMeasure_OnValueChanged" Minimum="0" Maximum="9999" Value="0" Increment="1" FormatString="N0" Margin="0,0,5,0"/>
                    <NumericUpDown Grid.Column="1" Name="NumericBeatValue" ValueChanged="NumericBeatValue_OnValueChanged" Minimum="0" Maximum="1920" Value="0" Increment="1" FormatString="N0" Margin="0,0,5,0" Width="60"/>
                    <NumericUpDown Grid.Column="2" Name="NumericBeatDivisor" ValueChanged="NumericBeatDivisor_OnValueChanged" Minimum="1" Maximum="1920" Value="16" Increment="1" FormatString="N0" Width="60"/>
                </Grid>
                
                <Grid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" ColumnDefinitions="2*,*">
                    <Button Name="ButtonInsert" Click="ButtonInsert_OnClick" Grid.Column="0"
                            Height="45" CornerRadius="3"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Content="{x:Static lang:Resources.Editor_Insert}" Margin="0,0,5,0"/>
                    <Button Name="ButtonEditHold" Click="ButtonEditHold_OnClick" Grid.Column="1"
                            Height="45" CornerRadius="3"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Content="{x:Static lang:Resources.Editor_EditHold}"/>
                    <Button Name="ButtonEndHold" Click="ButtonEndHold_OnClick" Grid.Column="1"
                            Height="45" CornerRadius="3" IsVisible="False" Foreground="Gold"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Content="{x:Static lang:Resources.Editor_EndHold}"/>
                </Grid>
            </Grid>
        </Grid>
        
        <!-- Canvas -->
        <controls:SkiaCanvas Grid.Row="1" Grid.Column="1" 
               Name="Canvas"
               Background="Transparent"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               RenderSkia="Canvas_OnRenderSkia"
               PointerWheelChanged="Canvas_OnPointerWheelChanged"
               PointerMoved="Canvas_OnPointerMoved"
               PointerPressed="Canvas_OnPointerPressed"
               PointerReleased="Canvas_OnPointerReleased">
        </controls:SkiaCanvas>
        
        <!-- Selection Count Popup -->
        <TextBlock Grid.Row="1" Grid.Column="1" Margin="5,5,0,0"
                   Name="SelectionCountText" Text="" IsVisible="False"
                   FontSize="15" Foreground="Aqua"/>
        
        <!-- Song Controls -->
        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Height="75" Name="SongControlPanel"
              ColumnDefinitions="Auto, *">
            
            <Button Name="ButtonPlay" Click="ButtonPlay_OnClick"
                    Width="55" Height="55" CornerRadius="3"
                    Grid.Column="0" Margin="5">
                <Button.Content>
                    <Panel>
                        <PathIcon Data="{DynamicResource IconPlay}" Name="IconPlay"/>
                        <PathIcon Data="{DynamicResource IconStop}" Name="IconStop" IsVisible="False"/>
                    </Panel>
                </Button.Content>
            </Button>
            
            <Grid Grid.Column="1" RowDefinitions="Auto, Auto" ColumnDefinitions="Auto, Auto, *">
				
				<rs:RangeSlider Grid.Row="0" Grid.Column="0"  Grid.ColumnSpan="3" Classes="Slim" Margin="10,0,15,0" IsThumbOverlap="True"
                        MoveWholeRange="True" Name="SliderSongPosition" PropertyChanged="SliderSongPosition_OnValueChanged"/>
				
                <Slider Grid.Row="1" Grid.Column="0" Classes="Compact" Width="200" HorizontalAlignment="Left" Margin="10,0,15,0" Name="SliderPlaybackSpeed"
                        Minimum="10" Maximum="200" Value="100" ValueChanged="SliderPlaybackSpeed_OnValueChanged"
                        TickPlacement="TopLeft" Ticks="0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200" IsSnapToTickEnabled="True"/>
                
                <TextBlock Grid.Row="1" Grid.Column="1" Text="100%" VerticalAlignment="Center" Margin="0,7,0,0" Name="TextBlockPlaybackSpeed"/>
				<ToggleButton  Name="ButtonLoop" IsChecked="False" Height="30"
						CornerRadius="3"
						Margin="7,7,0,0"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
						Grid.Row="1" Grid.Column="2" Content="{x:Static lang:Resources.Editor_Loop}" >
				</ToggleButton >
                <Grid Grid.Row="1" Grid.Column="3" RowDefinitions="*,*" HorizontalAlignment="Right" Margin="0,0,20,0">
                    <TextBlock Grid.Row="0" Name="TimestampDetailed" Text="00:00:00.000" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="1" Name="TimestampSeconds" Text="0.000" HorizontalAlignment="Right"/>
                </Grid>
            </Grid>
            
        </Grid>
        
        <!-- Action Drawer -->
        <ScrollViewer Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Name="RightPanel" Width="300" Background="{DynamicResource LightBrush}">
            <StackPanel>
                <Expander IsExpanded="True" Header="{x:Static lang:Resources.Editor_ExpanderHeader_ChartInfo}">
                    <StackPanel>
                        <TextBlock Name="ChartInfoChartFilepath" Text=""/>
                        
                        <Separator/>
                        
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.Editor_ChartInfo_ChartAudio}" Margin="0,2,0,2"/>
                            <Button Content="{x:Static lang:Resources.Generic_SelectFile}" Name="ChartInfoSelectAudio" Click="ChartInfoSelectAudio_OnClick" Width="130" Height="35" HorizontalAlignment="Right" Margin="0,2,0,2"/>
                        </UniformGrid>
                        
                        <TextBlock Name="ChartInfoAudioFilepath" Text=""/>
                            
                        <Separator/>
                        
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_Author}" Margin="0,2,0,2"/>
                            <TextBox Text="" Name="ChartInfoAuthor" TextChanged="ChartInfoAuthor_OnTextChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                        </UniformGrid>
                        
                        <Separator/>
                        
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_Level}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="0" Name="ChartInfoLevel" ValueChanged="ChartInfoLevel_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                            
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_ClearThreshold}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="0" Name="ChartInfoClearThreshold" ValueChanged="ChartInfoClearThreshold_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                        </UniformGrid>
                        
                        <Separator/>
                        
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_PreviewTime}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="0" Name="ChartInfoPreviewTime" ValueChanged="ChartInfoPreviewTime_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                            
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_PreviewLength}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="10" Name="ChartInfoPreviewLength" ValueChanged="ChartInfoPreviewLength_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                        </UniformGrid>
                        
                        <Button Content="{x:Static lang:Resources.ChartProperties_PlayPreview}" HorizontalAlignment="Stretch" Name="ChartInfoPlayPreview" Margin="0,2,0,0" Click="ChartInfoPlayPreview_OnClick"/>
                        
                        <Separator/>
                        
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_Offset}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="0" Name="ChartInfoOffset" ValueChanged="ChartInfoOffset_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                            
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.ChartProperties_MovieOffset}" Margin="0,2,0,2"/>
                            <fluent:NumberBox Value="0" Name="ChartInfoMovieOffset" ValueChanged="ChartInfoMovieOffset_OnValueChanged" HorizontalAlignment="Right" Margin="0,2,0,2" Width="130"/>
                        </UniformGrid>
                    </StackPanel>
                </Expander>
                
                <Expander Header="{x:Static lang:Resources.Editor_ExpanderHeader_SelectionInfo}">
                    <StackPanel>
                        <Grid RowDefinitions="*,Auto,*,Auto,*,Auto,*,Auto,*,*" ColumnDefinitions="*,*,*,1.2*">
                            <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Editor_SelectionInfo_SelectedNotes}" Name="SelectionInfoSelectedNotes"/>
                            <TextBlock Margin="5" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoSelectedNotesValue"/>
                            
                            <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4"/>
                            
                            <Grid Grid.Row="2" Grid.Column="0" ColumnSpan="4" RowDefinitions="*" ColumnDefinitions="*,*,*">
                                <Button Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,2,0" Click="SelectionInfoHighlightPrev_OnClick" Content="{x:Static lang:Resources.Editor_HighlightPrev}"/>
                                <Button Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,2,0" Click="SelectionInfoHighlightNearest_OnClick" Content="{x:Static lang:Resources.Editor_HighlightNearest}"/>
                                <Button Grid.Column="2" HorizontalAlignment="Stretch" Margin="2,0,0,0" Click="SelectionInfoHighlightNext_OnClick" Content="{x:Static lang:Resources.Editor_HighlightNext}"/>
                            </Grid>
                            
                            <Separator Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4"/>
                            
                            <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="{x:Static lang:Resources.Editor_Measure}"/>
                            <TextBlock Margin="5" Grid.Row="4" Grid.Column="1" Text="[Value]" Name="SelectionInfoMeasureValue"/>
                            <TextBlock Margin="5" Grid.Row="4" Grid.Column="2" Text="{x:Static lang:Resources.Editor_Beat}"/>
                            <TextBlock Margin="5" Grid.Row="4" Grid.Column="3" Text="[Value]" Name="SelectionInfoBeatValue"/>
                        
                            <Separator Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4" Name="SelectionInfoSeparator1"/>
                        
                            <TextBlock Margin="5" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Editor_NoteType}" Name="SelectionInfoNoteType"/>
                            <TextBlock Margin="5" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoNoteTypeValue"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Editor_GimmickType}" Name="SelectionInfoGimmickType"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoGimmickTypeValue"/>
                        
                            <Separator IsVisible="False" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="4" Name="SelectionInfoSeparator2"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="8" Grid.Column="0" Text="{x:Static lang:Resources.Editor_Position}" Name="SelectionInfoPosition"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="8" Grid.Column="1" Text="[Value]" Name="SelectionInfoPositionValue"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="8" Grid.Column="2" Text="{x:Static lang:Resources.Editor_Size}" Name="SelectionInfoSize"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="8" Grid.Column="3" Text="[Value]" Name="SelectionInfoSizeValue"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Editor_MaskDirection}" Name="SelectionInfoMaskDirection"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoMaskDirectionValue"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Gimmick_BpmChange}" Name="SelectionInfoBpm"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoBpmValue"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Gimmick_HiSpeedChange}" Name="SelectionInfoHiSpeed"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoHiSpeedValue"/>
                        
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static lang:Resources.Gimmick_TimeSigChange}" Name="SelectionInfoTimeSig"/>
                            <TextBlock IsVisible="False" Margin="5" Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="2" Text="[Value]" Name="SelectionInfoTimeSigValue"/>
                    </Grid>
                    </StackPanel>
                </Expander>
                
                <Expander Header="{x:Static lang:Resources.Editor_ExpanderHeader_QuickSettings}">
                    <StackPanel>
                        <UniformGrid Columns="2">
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.Settings_NoteSpeed}"/>
                            <NumericUpDown Name="QuickSettingsNumericNoteSpeed" FormatString="N1" ParsingNumberStyle="Number"
                                           Minimum="1" Maximum="6" Value="4.5" Increment="0.1" ValueChanged="QuickSettingsNoteSpeed_OnValueChanged"
                                           HorizontalAlignment="Right" Width="80" Margin="5"/>
                        
                            <TextBlock VerticalAlignment="Center" Text="{x:Static lang:Resources.Settings_BeatDivision}"/>
                            <NumericUpDown Name="QuickSettingsNumericBeatDivision" FormatString="N0" ParsingNumberStyle="Integer" 
                                           Minimum="1" Maximum="128" Value="4" Increment="1" ValueChanged="QuickSettingsBeatDivision_OnValueChanged"
                                           HorizontalAlignment="Right" Width="80" Margin="5"/>
                        </UniformGrid>
                        
                        <Separator Margin="0,5,0,12"/>
                        
                        <TextBlock VerticalAlignment="Center" Margin="0,0,0,-7" Text="{x:Static lang:Resources.Settings_Audio_MusicVolume}"/>
                        <Slider Classes="Compact" Margin="0,0,0,20" TickFrequency="5" TickPlacement="TopLeft" 
                                Minimum="0" Maximum="100" Value="50" Name="QuickSettingsSliderMusic" ValueChanged="QuickSettingsSliderMusic_OnValueChanged"/>
                
                        <TextBlock VerticalAlignment="Center" Margin="0,0,0,-7" Text="{x:Static lang:Resources.Settings_Audio_HitsoundVolume}"/>
                        <Slider Classes="Compact" Margin="0,0,0,20" TickFrequency="5" TickPlacement="TopLeft"
                                Minimum="0" Maximum="100" Value="50" Name="QuickSettingsSliderHitsound" ValueChanged="QuickSettingsSliderHitsound_OnValueChanged"/>
                    </StackPanel>
                </Expander>
            
                <Expander Header="{x:Static lang:Resources.Editor_ExpanderHeader_ModifyNotes}">
                    <StackPanel>
                        <Grid RowDefinitions="*,*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,2,2" Click="ButtonEditSelectionShape_OnClick" Content="{x:Static lang:Resources.Editor_EditNoteShape}"/>
                            <Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,0,2" Click="ButtonEditSelectionProperties_OnClick" Content="{x:Static lang:Resources.Editor_EditNoteProperties}"/>
                            <Button Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,2,2,0" Click="ButtonEditSelectionFull_OnClick" Content="{x:Static lang:Resources.Editor_EditNoteShapeProperties}"/>
                            <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,2,0,0" Click="ButtonDeleteSelection_OnClick" Content="{x:Static lang:Resources.Editor_DeleteSelection}" Foreground="Red"/>
                        </Grid>
                        
                        <Separator/>
                        
                        <Grid RowDefinitions="*,*" ColumnDefinitions="*,*">
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static lang:Resources.Editor_MirrorAxis}"/>
                            <NumericUpDown Grid.Row="1" Grid.Column="0" Name="NumericMirrorAxis" Margin="0,0,2,0" Maximum="60" Minimum="-1" Increment="1" Value="30" ValueChanged="NumericMirrorAxis_OnValueChanged" PointerEntered="NumericMirrorAxis_OnPointerEntered" PointerExited="NumericMirrorAxis_OnPointerExited"/>
                            <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,0,0" Click="ButtonMirrorSelection_OnClick" Content="{x:Static lang:Resources.Editor_MirrorNote}"/>
                        </Grid>
                        
                        <Separator/>
                        
                        <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*">
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static lang:Resources.Editor_HoldEaseHeader}"/>
                            <ComboBox Grid.Row="1" Grid.Column="0" Name="HoldEaseComboBox" HorizontalAlignment="Stretch" Margin="0,0,2,0" SelectedIndex="0">
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_Linear}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_LinearPlusIn}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_LinearPlusOut}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SmoothIn}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SmoothOut}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SharpIn}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SharpOut}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SineIn}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_SineOut}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_QuadIn}"/>
                                <ComboBoxItem Content="{x:Static lang:Resources.Editor_HoldEase_QuadOut}"/>
                            </ComboBox>
                            <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,0,2" Click="ButtonBakeHold_OnClick" Content="{x:Static lang:Resources.Editor_BakeHoldNote}"/>
                            <Button Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,2,2,0" Click="ButtonStitchHold_OnClick" Content="{x:Static lang:Resources.Editor_StitchHold}"/>
                            <Button Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,2,0,0" Click="ButtonInsertHoldSegment_OnClick" Content="{x:Static lang:Resources.Editor_InsertHoldSegment}"/>
                        </Grid>
                        
                        <Separator/>
                        
                        <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,2,0" Click="ButtonSetRenderTrue_OnClick" Content="{x:Static lang:Resources.Editor_SetRenderTrue}"/>
                            <Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,0,0" Click="ButtonSetRenderFalse_OnClick" Content="{x:Static lang:Resources.Editor_SetRenderFalse}"/>
                        </Grid>
                    </StackPanel>
                </Expander>
                
                <Expander Header="{x:Static lang:Resources.Editor_ExpanderHeader_ModifyGimmicks}">
                    <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                        <Button Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,2,0" Click="ButtonEditGimmick_OnClick" Content="{x:Static lang:Resources.Editor_EditGimmick}"/>
                        <Button Grid.Column="1" HorizontalAlignment="Stretch" Margin="2,0,0,0" Click="ButtonDeleteGimmick_OnClick" Content="{x:Static lang:Resources.Editor_DeleteGimmick}" Foreground="Red"/>
                    </Grid>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
